plugins:
  packages:
    - ccx_rules_ocp.external
    - ccx_rules_processing
    - ccx_messaging
  configs:
    - name: ccx_ocp_core.config.telemeter.TelemeterServiceConfig
      enabled: false
service:
  extract_timeout:
  extract_tmp_dir:
  format: insights.formats._json.JsonFormat
  target_components: []
  consumer:
    name: ccx_messaging.consumers.kafka_consumer.KafkaConsumer
    kwargs:
      incoming_topic: ${CDP_INCOMING_TOPIC:platform.upload.announce}
      group.id: ${CDP_GROUP_ID:ccx_data_pipeline_app}
      bootstrap.servers: ${CDP_CONSUMER_SERVER:["10.34.129.172:9092"]}
      platform_service: openshift
      security_protocol: SASL_SSL
      sasl_mechanism: PLAIN
      sasl_plain_username: ${CDP_CONSUMER_USERNAME}
      sasl_plain_password: ${CDP_CONSUMER_USERPASS}
      max.poll.interval.ms: 600000
      heartbeat.interval.ms: 10000
      session.timeout.ms: 20000
      dead_letter_queue_topic: ${CDP_DEAD_LETTER_QUEUE_TOPIC:dead.letter.queue}
  downloader:
    name: ccx_messaging.downloaders.http_downloader.HTTPDownloader
    kwargs:
      max_archive_size: 100MiB

  publisher:
    name: ccx_messaging.publishers.rule_processing_publisher.RuleProcessingPublisher
    kwargs:
      outgoing_topic: ${CDP_OUTGOING_TOPIC:ccx.ocp.results}
      bootstrap.servers: ${CDP_PUBLISHER_SERVER:10.34.129.172:9092}
      security_protocol: SASL_SSL
      sasl_mechanism: PLAIN
      sasl_plain_username: ${CDP_PUBLISHER_USERNAME}
      sasl_plain_password: ${CDP_PUBLISHER_USERPASS}
  watchers:
    - name: ccx_messaging.watchers.stats_watcher.StatsWatcher
      kwargs:
        prometheus_port: 8000
    - name: ccx_messaging.watchers.cluster_id_watcher.ClusterIdWatcher

  logging:
    version: 1
    disable_existing_loggers: false
    handlers:
      default:
        level: DEBUG
        class: logging.StreamHandler
        stream: ext://sys.stdout
        formatter: json
        filters:
          - context_filter
      logstash:
        level: INFO
        class: logstash.TCPLogstashHandler
        host: "127.0.0.1"
        port: 5000
        version: 1
    formatters:
      brief:
        format: "%(message)s"
      json:
        (): "pythonjsonlogger.jsonlogger.JsonFormatter"
        format: "%(filename)s %(lineno)d %(process)d %(levelname)s %(asctime)s %(name)s %(message)s"
      cloudwatch:
        format: "%(filename)s %(levelname)s %(asctime)s %(name)s %(hostname)s %(mac_address)s %(message)s"
    filters:
      context_filter:
        (): "ccx_data_pipeline.log_filter.LogFilter"
    root:
      handlers:
        - default
        - logstash
    loggers:
      insights_messaging:
        level: DEBUG
      insights:
        level: WARNING
      ccx_data_pipeline:
        level: DEBUG
      ccx_messaging:
        level: DEBUG
